{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAqBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,GACFF,EAAQ,uBAAqBH,QAAiBC,OAE9CG,EAAK,sBAAoBJ,QAAeC,MAAU,GACnDA,EAAM,G,CAIb,SAASQ,EAAYC,GACnBb,EAAAc,OAAOC,QAAQF,E,CAGjB,SAASG,EAAWC,GAClBjB,EAAAc,OAAOI,QAAQD,E,CApCJE,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAKC,EAASC,EAAaC,GAAYJ,EAAEK,OACrCvB,EAAQwB,SAASJ,EAAQK,OACzBC,EAAYF,SAASH,EAAYI,OACjCE,EAASH,SAASF,EAASG,OAE/B,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAAG,CAElC9B,EADe8B,EAAI,EACK5B,GAAO6B,KAAKrB,GAAasB,MAAMlB,GACvDZ,GAAS0B,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  let [delayEL, delayStepEL, amountEl] = e.target;\n  let delay = parseInt(delayEL.value);\n  let delayStep = parseInt(delayStepEL.value);\n  let amount = parseInt(amountEl.value);\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    createPromise(position, delay).then(onFulfilled).catch(onRejected);\n    delay += delayStep;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      }\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }, delay);\n  });\n}\n\nfunction onFulfilled(result) {\n  Notify.success(result);\n}\n\nfunction onRejected(error) {\n  Notify.failure(error);\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$47d4ff9957288465$var$onFulfilled","result","Notify","success","$47d4ff9957288465$var$onRejected","error","failure","document","querySelector","addEventListener","e","preventDefault","delayEL","delayStepEL","amountEl","target","parseInt","value","delayStep","amount","i","then","catch"],"version":3,"file":"03-promises.d6ab56df.js.map"}